name: .NET Core Console App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: AdvancedFeatures.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      # Test_Project_Path: your-test-project-path               # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: AdvancedFeatures.Package           # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: AdvancedFeatures.App.Package\AdvancedFeatures.Package.wapproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
    - name: Setup .NET
      uses: actions/checkout@v3
      with:
        dotnet-version: 6.0.x

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #  run: dotnet test
    
    # Display dotnet versions
    - name: Display dotnet version
      run: dotnet --version

    # Restore the application to populate the obj fol der with RuntimeIdentifiers
    - run: echo "Restoring dependencies in progress."
    - name: Restore dependencies
      run: dotnet restore     
    
    # End workflow
